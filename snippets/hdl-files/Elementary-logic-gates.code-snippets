{
  "Creates a Chip": {
    "prefix": "Chip",
    "body": [
      "CHIP ${1:name} {\n",
      "\tIN ${2:input};",
      "\tOUT ${3:out};",
      "\n",
      "\tPARTS:",
      "\t// Code here",
      "}"
    ],
    "description": "Create a template for a chip."
  },
  "Creates a NAND Gate": {
    "prefix": "Nand",
    "body": "Nand(a=${1:a}, b=${2:b}, out=${3:out});",
    "description": [
      "Nand gate (built-in).\n",
      "| a | b |out|",
      "| 0 | 0 | 1 |",
      "| 0 | 1 | 1 |",
      "| 1 | 0 | 1 |",
      "| 1 | 1 | 0 |\t"
    ]
  },
  "Creates a NOT Gate": {
    "prefix": "Not",
    "body": "Not(in=${1:a}, out=${2:out});",
    "description": [
      "Not gate:",
      "out = not in\n",
      "|in |out|",
      "| 0 | 1 |",
      "| 1 | 0 |\t"
    ]
  },
  "Creates a AND Gate": {
    "prefix": "And",
    "body": "And(a=${1:a}, b=${2:b}, out=${3:out});",
    "description": [
      "And gate:",
      "out = 1 if (a == 1 and b == 1)",
      "      0 otherwise\n",
      "| a | b |out|",
      "| 0 | 0 | 0 |",
      "| 0 | 1 | 0 |",
      "| 1 | 0 | 0 |",
      "| 1 | 1 | 1 |\t"
    ]
  },
  "Creates a OR Gate": {
    "prefix": "Or",
    "body": "Or(a=${1:a}, b=${2:b}, out=${3:out});",
    "description": [
      "Or gate:",
      "out = 1 if (a == 1 or b == 1)",
      "      0 otherwise\n",
      "| a | b |out|",
      "| 0 | 0 | 0 |",
      "| 0 | 1 | 1 |",
      "| 1 | 0 | 1 |",
      "| 1 | 1 | 1 |\t"
    ]
  },
  "Creates a XOR Gate": {
    "prefix": "Xor",
    "body": "Xor(a=${1:a}, b=${2:b}, out=${3:out});",
    "description": [
      "Xor gate:",
      "out = not (a == b)\n",
      "| a | b |out|",
      "| 0 | 0 | 0 |",
      "| 0 | 1 | 1 |",
      "| 1 | 0 | 1 |",
      "| 1 | 1 | 0 |\t"
    ]
  },
  "Creates a MUX Gate (Multiplexor)": {
    "prefix": "Mux",
    "body": "Mux(a=${1:a}, b=${2:b}, sel=${3:sel}, out=${4:out});",
    "description": [
      "Mux gate (selects between two inputs):",
      "out = a if sel == 0",
      "      b otherwise\n",
      "| a | b |sel|out|",
      "| 0 | 0 | 0 | 0 |",
      "| 0 | 0 | 1 | 0 |",
      "| 0 | 1 | 0 | 0 |",
      "| 0 | 1 | 1 | 1 |",
      "| 1 | 0 | 0 | 1 |",
      "| 1 | 0 | 1 | 0 |",
      "| 1 | 1 | 0 | 1 |",
      "| 1 | 1 | 1 | 1 |\t"
    ]
  },
  "Creates a DMUX Gate (Demultiplexor)": {
    "prefix": "Dmux",
    "body": "Dmux(in=${1:in}, sel=${2:selctor}, a=${3:a}, b=${4:b});",
    "description": [
      "Dmux gate (routes the input to one out of two outputs):",
      "{a, b} = {in, 0} if sel == 0",
      "         {0, in} if sel == 1\n",
      "|in |sel| a | b |",
      "| 0 | 0 | 0 | 0 |",
      "| 0 | 1 | 0 | 0 |",
      "| 1 | 0 | 1 | 0 |",
      "| 1 | 1 | 0 | 1 |\t"
    ]
  }
}